{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Create New Onboarding in Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create New Onboarding in Notion": {
      "main": [
        [
          {
            "node": "New Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Contact": {
      "main": [
        [
          {
            "node": "Set Leadsie",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Client": {
      "main": [
        [
          {
            "node": "Slack1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack1": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Add to Skool",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Skool": {
      "main": [
        [
          {
            "node": "Commence Realtor Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Commence Realtor Enrichment": {
      "main": [
        [
          {
            "node": "New Registration template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Registration template": {
      "main": [
        [
          {
            "node": "New Registration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Registration": {
      "main": [
        [
          {
            "node": "Set Slack Notification data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack": {
      "main": [
        [
          {
            "node": "Gmail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail1": {
      "main": [
        [
          {
            "node": "Notify Leadsie link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Leadsie": {
      "main": [
        [
          {
            "node": "New Client set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Leadsie link": {
      "main": [
        [
          {
            "node": "New Leadsie Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Leadsie Credentials": {
      "main": [
        [
          {
            "node": "Get Image data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Client set data": {
      "main": [
        [
          {
            "node": "New Client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Slack Notification data": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image data": {
      "main": [
        [
          {
            "node": "Client Image Enhancement",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Client Image Enhancement": {
      "main": [
        [
          {
            "node": "Update Client Images_bg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-01T18:37:42.944Z",
  "id": "9wSjOcu8bxQ5bGJ3",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "SalesGenius Onboarding",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "onboarding2",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -360,
        -520
      ],
      "id": "1a9f5ce6-a5e0-4f2e-a83f-05564c5bf4c3",
      "name": "Webhook",
      "webhookId": "b2debdbf-cafe-48f8-bbaf-dfa2e24ddbe6"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "include": "specifiedFields",
        "fieldsToInclude": "body",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -180,
        -520
      ],
      "id": "e0831a47-9737-4fb0-b195-defe957609c4",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b74095cf-f257-4c45-ae32-76af1cfbe26d",
              "name": "first_name",
              "value": "={{ $json.data[0].body.first_name }}",
              "type": "string"
            },
            {
              "id": "e60f1473-ca5b-4392-8f2a-40b5169ab20c",
              "name": "last_name",
              "value": "={{ $json.data[0].body.last_name }}",
              "type": "string"
            },
            {
              "id": "eca5640e-8fcf-42ac-95d8-759de72a5c1f",
              "name": "email",
              "value": "={{ $json.data[0].body.email }}",
              "type": "string"
            },
            {
              "id": "eb42435a-1e86-48bb-a5ec-b5d08ac3f605",
              "name": "phone",
              "value": "={{ $json.data[0].body.phone }}",
              "type": "string"
            },
            {
              "id": "da92b7d0-ab12-486d-a454-8e6d520a15e9",
              "name": "date_of_birth",
              "value": "={{ $json.data[0].body.date_of_birth }}",
              "type": "string"
            },
            {
              "id": "ccd52272-3f9c-4770-816b-8e6f148ecd35",
              "name": "timezone",
              "value": "={{ $json.data[0].body.timezone }}",
              "type": "string"
            },
            {
              "id": "accb1e1d-3c99-41d6-ad89-95c6f095d6d6",
              "name": "clothing_size",
              "value": "={{ $json.data[0].body.clothing_size }}",
              "type": "string"
            },
            {
              "id": "9432e113-60c4-4adf-8a2d-6c6eb62cda85",
              "name": "address",
              "value": "={{ $json.data[0].body.address }}",
              "type": "string"
            },
            {
              "id": "3cd4f697-4bd5-41e5-ba98-e24cf3a99c7e",
              "name": "address_unit",
              "value": "={{ $json.data[0].body.address_unit }}",
              "type": "string"
            },
            {
              "id": "860992de-64a9-4e84-95f0-8b4048508461",
              "name": "city",
              "value": "={{ $json.data[0].body.city }}",
              "type": "string"
            },
            {
              "id": "650c01ac-c9b3-4a42-a0e6-6a1a9489f1bb",
              "name": "state",
              "value": "={{ $json.data[0].body.state }}",
              "type": "string"
            },
            {
              "id": "3fe3c792-4e0c-415f-a136-7b0f4cb0174b",
              "name": "postal_code",
              "value": "={{ $json.data[0].body.postal_code }}",
              "type": "string"
            },
            {
              "id": "afdccb21-699f-4f42-839d-0f9711ae1dbb",
              "name": "country",
              "value": "={{ $json.data[0].body.country }}",
              "type": "string"
            },
            {
              "id": "88b601fa-b1c1-455a-b026-c9c1e8bdcb1f",
              "name": "brokerage_name",
              "value": "={{ $json.data[0].body.brokerage_name }}",
              "type": "string"
            },
            {
              "id": "2d6a8406-4306-4e46-b9d7-47fd07abdd9e",
              "name": "brokerage_address",
              "value": "={{ $json.data[0].body.brokerage_address }}",
              "type": "string"
            },
            {
              "id": "cd6d0b67-d538-4505-bc7a-e319e36dc316",
              "name": "brokerage_unit",
              "value": "={{ $json.data[0].body.brokerage_unit }}",
              "type": "string"
            },
            {
              "id": "ba29094b-1576-46d0-a963-9192154020b1",
              "name": "brokerage_city",
              "value": "={{ $json.data[0].body.brokerage_city }}",
              "type": "string"
            },
            {
              "id": "661ba149-963d-4d2a-8994-c205e7b35c41",
              "name": "brokerage_state",
              "value": "={{ $json.data[0].body.brokerage_state }}",
              "type": "string"
            },
            {
              "id": "3edac707-6846-4821-9f1f-2afaa0aed512",
              "name": "brokerage_postal_code",
              "value": "={{ $json.data[0].body.brokerage_postal_code }}",
              "type": "string"
            },
            {
              "id": "30e17179-aa08-4a9f-9610-6f16349c9f2d",
              "name": "brokerage_country",
              "value": "={{ $json.data[0].body.brokerage_country }}",
              "type": "string"
            },
            {
              "id": "22364199-6494-4368-864b-e47cc8379176",
              "name": "business_type",
              "value": "={{ $json.data[0].body.business_type }}",
              "type": "string"
            },
            {
              "id": "dcb5d2c2-87ae-4e4d-b6e2-3ee8ca99f325",
              "name": "team_name",
              "value": "={{ $json.data[0].body.team_name }}",
              "type": "string"
            },
            {
              "id": "3c61b94f-c812-4efa-9e03-3f25bcf9ab65",
              "name": "team_size",
              "value": "={{ $json.data[0].body.team_size }}",
              "type": "number"
            },
            {
              "id": "c6b882d5-9d28-43a0-adb6-33464e8970f1",
              "name": "instagram_handle",
              "value": "={{ $json.data[0].body.instagram_handle }}",
              "type": "string"
            },
            {
              "id": "d6137a9e-5d88-422d-909c-16576d089227",
              "name": "has_facebook_page",
              "value": "={{ $json.data[0].body.has_facebook_page }}",
              "type": "boolean"
            },
            {
              "id": "dc5aba76-dd88-4780-b642-368ea0df785c",
              "name": "facebook_page_url",
              "value": "={{ $json.data[0].body.facebook_page_url }}",
              "type": "string"
            },
            {
              "id": "0496f6ae-b4d0-4783-b937-3ed2a6db7ef0",
              "name": "has_website",
              "value": "={{ $json.data[0].body.has_website }}",
              "type": "boolean"
            },
            {
              "id": "542bfb73-a4c3-40ce-a4bb-32158ce5571b",
              "name": "website_url",
              "value": "={{ $json.data[0].body.website_url }}",
              "type": "string"
            },
            {
              "id": "e366875c-dc6b-411b-b7c9-d5720f706f1f",
              "name": "using_crm",
              "value": "={{ $json.data[0].body.using_crm }}",
              "type": "boolean"
            },
            {
              "id": "d25255a6-fcac-47da-a537-5137219064ca",
              "name": "crm_name",
              "value": "={{ $json.data[0].body.crm_name }}",
              "type": "string"
            },
            {
              "id": "72ea8e69-c90e-48da-8e63-9990a2ff9c45",
              "name": "crm_connected_to_meta",
              "value": "={{ $json.data[0].body.crm_connected_to_meta }}",
              "type": "boolean"
            },
            {
              "id": "906547bf-3b7d-44c3-8498-f5ba8d2565b7",
              "name": "primary_color",
              "value": "={{ $json.data[0].body.primary_color }}",
              "type": "string"
            },
            {
              "id": "2ce4fae6-9a10-46bb-8881-e86063c8a05e",
              "name": "current_year_gci",
              "value": "={{ $json.data[0].body.current_year_gci }}",
              "type": "number"
            },
            {
              "id": "afd8cb23-0a0b-4b2c-85f6-28b3e19ca837",
              "name": "current_year_average_price",
              "value": "={{ $json.data[0].body.current_year_average_price }}",
              "type": "number"
            },
            {
              "id": "b4c1f092-9943-4161-bac4-99177479cf0e",
              "name": "current_year_listings",
              "value": "={{ $json.data[0].body.current_year_listings }}",
              "type": "number"
            },
            {
              "id": "10f5c4b3-bb94-4a35-baed-dadb2fdcdd5e",
              "name": "current_year_buyer_deals",
              "value": "={{ $json.data[0].body.current_year_buyer_deals }}",
              "type": "number"
            },
            {
              "id": "8d8f9b8c-3f8f-4057-8536-7f25f74eb381",
              "name": "current_year_lease_deals",
              "value": "={{ $json.data[0].body.current_year_lease_deals }}",
              "type": "number"
            },
            {
              "id": "a3108162-2233-4b03-9be9-99273cd16a7d",
              "name": "current_year_commission_percentage",
              "value": "={{ $json.data[0].body.current_year_commission_percentage }}",
              "type": "number"
            },
            {
              "id": "c53a8036-b674-4b70-9fa3-7a6c8b1a50b1",
              "name": "next_year_gci_goal",
              "value": "={{ $json.data[0].body.next_year_gci_goal }}",
              "type": "number"
            },
            {
              "id": "e9595975-488f-40cc-bb2c-e3313142a360",
              "name": "next_year_target_deal_size",
              "value": "={{ $json.data[0].body.next_year_target_deal_size }}",
              "type": "number"
            },
            {
              "id": "b6a32700-a32d-45d8-b011-5ae26e9d8775",
              "name": "next_year_target_commission_percentage",
              "value": "={{ $json.data[0].body.next_year_target_commission_percentage }}",
              "type": "number"
            },
            {
              "id": "3978cf22-e0b4-42b4-b415-a5c1da71b798",
              "name": "submission_date",
              "value": "={{ $json.data[0].body.submission_date }}",
              "type": "string"
            },
            {
              "id": "0e03241c-f757-4952-8019-cb3881f34877",
              "name": "source",
              "value": "={{ $json.data[0].body.source }}",
              "type": "string"
            },
            {
              "id": "ffb4a3e6-1b51-48d5-b0d1-19399ac79a93",
              "name": "logo",
              "value": "={{ $json.data[0].body.logo_url }}",
              "type": "string"
            },
            {
              "id": "4a45ed16-a7cb-4c1e-8565-489c3b8aae7d",
              "name": "headshot",
              "value": "={{ $json.data[0].body.headshot_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        -520
      ],
      "id": "0e0243f8-4213-41f3-afa3-70f28fc538c6",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "// Custom node for n8n that creates proper Notion page with blocks for each field\n// This node transforms incoming data into Notion API-compatible format\n\n// Get the input data from the workflow\nlet items = [];\nif (Array.isArray($input.all())) {\n  items = $input.all();\n} else {\n  items = [$input.item];\n}\n\n// Process each input item\nconst processedItems = items.map(item => {\n  try {\n    const data = item.json || item;\n    \n    // Construct full name from first_name and last_name fields\n    const firstName = data.first_name || \"\";\n    const lastName = data.last_name || \"\";\n    const fullName = firstName && lastName ? `${firstName} ${lastName}` : \n                    firstName ? firstName : \n                    lastName ? lastName : \"Unknown Contact\";\n    \n    // Create content blocks for the Notion page\n    const blocks = [];\n    \n    // Add page title\n    blocks.push({\n      object: \"block\",\n      type: \"heading_1\",\n      heading_1: {\n        rich_text: [{\n          type: \"text\",\n          text: { content: `Contact Profile: ${fullName}` }\n        }]\n      }\n    });\n    \n    // Add divider after title\n    blocks.push({\n      object: \"block\",\n      type: \"divider\",\n      divider: {}\n    });\n    \n    // Define sections to organize the data\n    const sections = [\n      {\n        title: \"Personal Details\",\n        fields: [\n          \"first_name\", \"last_name\", \"phone\", \"email\", \"date_of_birth\", \n          \"timezone\", \"clothing_size\", \"address\", \"address_unit\", \"city\", \n          \"state\", \"postal_code\", \"country\"\n        ]\n      },\n      {\n        title: \"Brokerage Information\",\n        fields: [\n          \"brokerage_name\", \"brokerage_address\", \"brokerage_unit\",\n          \"brokerage_city\", \"brokerage_state\", \"brokerage_postal_code\", \"brokerage_country\"\n        ]\n      },\n      {\n        title: \"Business Information\",\n        fields: [\n          \"business_type\", \"team_name\", \"team_size\"\n        ]\n      },\n      {\n        title: \"Online Information\",\n        fields: [\n          \"instagram_handle\", \"has_facebook_page\", \"facebook_page_url\", \n          \"has_website\", \"website_url\", \"using_crm\", \"crm_name\", \"crm_connected_to_meta\"\n        ]\n      },\n      {\n        title: \"Branding\",\n        fields: [\n          \"logo\", \"headshot\", \"primary_color\"\n        ]\n      },\n      {\n        title: \"Real Estate Stats (2024 Performance)\",\n        fields: [\n          \"current_year_gci\", \"current_year_average_price\", \"current_year_listings\", \n          \"current_year_buyer_deals\", \"current_year_lease_deals\", \"current_year_commission_percentage\"\n        ]\n      },\n      {\n        title: \"Real Estate Stats (2025 Goals)\",\n        fields: [\n          \"next_year_gci_goal\", \"next_year_target_deal_size\", \"next_year_target_commission_percentage\"\n        ]\n      },\n      {\n        title: \"Metadata\",\n        fields: [\n          \"submission_date\", \"source\"\n        ]\n      }\n    ];\n    \n    // Track fields that have been added to sections\n    const processedFields = new Set();\n    \n    // Process each section\n    sections.forEach(section => {\n      // Check if this section has any fields in the data\n      const sectionFields = section.fields.filter(field => {\n        return field in data && \n               data[field] !== undefined && \n               data[field] !== null && \n               !(typeof data[field] === 'string' && data[field].trim() === \"\");\n      });\n      \n      if (sectionFields.length > 0) {\n        // Add section header\n        blocks.push({\n          object: \"block\",\n          type: \"heading_2\",\n          heading_2: {\n            rich_text: [{\n              type: \"text\",\n              text: { content: section.title }\n            }]\n          }\n        });\n        \n        // Add each field in this section\n        sectionFields.forEach(field => {\n          // Mark field as processed\n          processedFields.add(field);\n          \n          // Add the field as a paragraph block\n          blocks.push({\n            object: \"block\",\n            type: \"paragraph\",\n            paragraph: {\n              rich_text: [\n                {\n                  type: \"text\",\n                  text: { content: formatLabel(field) + \": \" },\n                  annotations: { bold: true }\n                },\n                {\n                  type: \"text\",\n                  text: { content: formatValue(data[field]) }\n                }\n              ]\n            }\n          });\n        });\n        \n        // Add divider after section\n        blocks.push({\n          object: \"block\",\n          type: \"divider\",\n          divider: {}\n        });\n      }\n    });\n    \n    // Handle any remaining fields not covered by defined sections\n    const remainingFields = Object.keys(data).filter(field => \n      !processedFields.has(field) && \n      data[field] !== undefined && \n      data[field] !== null && \n      !(typeof data[field] === 'string' && data[field].trim() === \"\")\n    );\n    \n    if (remainingFields.length > 0) {\n      // Add additional info section header\n      blocks.push({\n        object: \"block\",\n        type: \"heading_2\",\n        heading_2: {\n          rich_text: [{\n            type: \"text\",\n            text: { content: \"Additional Information\" }\n          }]\n        }\n      });\n      \n      // Add each remaining field\n      remainingFields.forEach(field => {\n        blocks.push({\n          object: \"block\",\n          type: \"paragraph\",\n          paragraph: {\n            rich_text: [\n              {\n                type: \"text\",\n                text: { content: formatLabel(field) + \": \" },\n                annotations: { bold: true }\n              },\n              {\n                type: \"text\",\n                text: { content: formatValue(data[field]) }\n              }\n            ]\n          }\n        });\n      });\n      \n      // Add final divider\n      blocks.push({\n        object: \"block\",\n        type: \"divider\",\n        divider: {}\n      });\n    }\n    \n          // Add image blocks at the bottom for logo and headshot if they exist\n    if (data.logo || data.headshot) {\n      // Add an Images header\n      blocks.push({\n        object: \"block\",\n        type: \"heading_2\",\n        heading_2: {\n          rich_text: [{\n            type: \"text\",\n            text: { content: \"Images\" }\n          }]\n        }\n      });\n      \n      // Add logo image block if exists\n      if (data.logo && typeof data.logo === 'string') {\n        blocks.push({\n          object: \"block\",\n          type: \"heading_3\",\n          heading_3: {\n            rich_text: [{\n              type: \"text\",\n              text: { content: \"Logo\" }\n            }]\n          }\n        });\n        \n        // Use proper format for Notion API image block with URL encoding\n        blocks.push({\n          object: \"block\",\n          type: \"image\",\n          image: {\n            type: \"external\",\n            external: {\n              url: encodeURI(data.logo.trim())\n            }\n          }\n        });\n      }\n      \n      // Add headshot image block if exists\n      if (data.headshot && typeof data.headshot === 'string') {\n        blocks.push({\n          object: \"block\",\n          type: \"heading_3\",\n          heading_3: {\n            rich_text: [{\n              type: \"text\",\n              text: { content: \"Headshot\" }\n            }]\n          }\n        });\n        \n        // Use proper format for Notion API image block with URL encoding\n        blocks.push({\n          object: \"block\",\n          type: \"image\",\n          image: {\n            type: \"external\",\n            external: {\n              url: encodeURI(data.headshot.trim())\n            }\n          }\n        });\n      }\n      \n      // Add final divider after images\n      blocks.push({\n        object: \"block\",\n        type: \"divider\",\n        divider: {}\n      });\n    }\n    \n    // Prepare database properties\n    const properties = {\n      // Required title property for Notion\n      \"Name\": {\n        title: [\n          {\n            text: {\n              content: fullName\n            }\n          }\n        ]\n      }\n    };\n    \n    // Add common database properties\n    if (data.email) {\n      properties[\"Email\"] = { email: data.email };\n    }\n    \n    if (data.phone) {\n      properties[\"Phone\"] = { phone_number: data.phone };\n    }\n    \n    if (data.submission_date) {\n      properties[\"Submission Date\"] = {\n        date: {\n          start: data.submission_date\n        }\n      };\n    }\n    \n    // Prepare final Notion API payload\n    return {\n      json: {\n        notionData: {\n          parent: {\n            database_id: \"1c81d08c4f5a807db365eb187c072ec1\" // Set to the correct database ID\n          },\n          // Set icon to a person emoji\n          icon: {\n            type: \"emoji\",\n            emoji: \"👤\"\n          },\n          // Set cover image to the headshot if it exists\n          cover: data.headshot ? {\n            type: \"external\",\n            external: { \n              url: encodeURI(data.headshot.trim())\n            }\n          } : undefined,\n          properties: properties,\n          children: blocks\n        }\n      }\n    };\n  } catch (error) {\n    // Error handling\n    return {\n      json: {\n        error: `Error processing item: ${error.message}`,\n        input: item\n      }\n    };\n  }\n});\n\n// Helper function to format field labels to be more readable\nfunction formatLabel(fieldName) {\n  return fieldName\n    .replace(/_/g, ' ')\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n}\n\n// Helper function to format field values appropriately based on type\nfunction formatValue(value) {\n  if (value === undefined || value === null) {\n    return 'Not provided';\n  }\n  \n  if (typeof value === 'boolean') {\n    return value ? 'Yes' : 'No';\n  }\n  \n  if (typeof value === 'number') {\n    // Format currency values\n    if (String(value).length > 3 && \n        ['gci', 'price', 'deal', 'commission'].some(term => \n          String(value).toLowerCase().includes(term))) {\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n        .replace('.00', '');\n    }\n    return value.toString();\n  }\n  \n  if (typeof value === 'string') {\n    // Handle dates\n    if (value.match(/^\\d{4}-\\d{2}-\\d{2}T/)) {\n      try {\n        // Format ISO date strings\n        const date = new Date(value);\n        return date.toLocaleDateString('en-US', { \n          year: 'numeric', \n          month: 'long', \n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      } catch (e) {\n        return value;\n      }\n    }\n    \n    // Format business_type values to be more readable\n    if (value === 'solo') {\n      return 'Solo Agent';\n    } else if (value === 'leader') {\n      return 'Team Leader';\n    } else if (value === 'member') {\n      return 'Team Member';\n    }\n    \n    return value;\n  }\n  \n  if (Array.isArray(value)) {\n    return value.join(', ');\n  }\n  \n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  \n  return String(value);\n}\n\n// Return processed items\nreturn processedItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        160,
        -520
      ],
      "id": "7a564363-39b9-42e0-8908-106dac95dd3b",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/pages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer ntn_y77938235783grxbphRwEazxtixxh4eENsIdl2RRJyW9fy"
            },
            {
              "name": "Notion-Version",
              "value": "2022-06-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Code').item.json.notionData }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        320,
        -520
      ],
      "id": "4403050b-582a-4594-8477-892eb7a9edfc",
      "name": "Create New Onboarding in Notion",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/pages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"parent\": {\n    \"database_id\": \"1761d08c4f5a801689ddf81384652240\"\n  },\n  \"properties\": {\n      \"Client Name\": {\n        \"title\": [\n          {\n            \"text\": {\n              \"content\": \"{{ $('Edit Fields').item.json.first_name }} {{ $('Edit Fields').item.json.last_name }}\"\n            }\n          }\n        ]\n      },\n      \"email\": {\n        \"email\": \"{{ $('Edit Fields').item.json.email }}\"\n      },\n      \"Cell\": {\n        \"phone_number\": \"{{ $('Edit Fields').item.json.phone }}\"\n      },\n      \"Start Date\": {\n        \"date\": {\n          \"start\": \"{{ $('Edit Fields').item.json.submission_date }}\"\n        }\n      },\n      \"Type\": {\n        \"select\": {\n          \"name\": \"{{ $('Edit Fields').item.json.business_type }}\"\n        }\n      },\n      \"Address\": {\n        \"rich_text\": [\n          {\n            \"text\": {\n              \"content\": \"{{ $('Edit Fields').item.json.address }}, {{ $('Edit Fields').item.json.city }}, {{ $('Edit Fields').item.json.state }}, {{ $('Edit Fields').item.json.postal_code }}, {{ $('Edit Fields').item.json.country }}\"\n            }\n          }\n        ]\n      },\n      \"Brokerage\": {\n        \"select\": {\n          \"name\": \"{{ $('Edit Fields').item.json.brokerage_name }}\"\n        }\n      },\n      \"Rollup\": {\n        \"url\": \"{{ $('Edit Fields').item.json.facebook_page_url }}\"\n      },\n      \"Last Update\": {\n        \"date\": {\n          \"start\": \"{{ $('Edit Fields').item.json.submission_date }}\"\n        }\n      },\n      \"Onboarding Forms\": {\n        \"relation\": [\n          {\n            \"id\": \"{{ $json.id }}\"\n          }\n        ]\n      },\n      \"Brokerage Address\": {\n        \"rich_text\": [\n          {\n            \"text\": {\n              \"content\": \"{{ $('Edit Fields').item.json.brokerage_address }}, {{ $('Edit Fields').item.json.brokerage_unit }}, {{ $('Edit Fields').item.json.brokerage_city }}, {{ $('Edit Fields').item.json.brokerage_state }}, {{ $('Edit Fields').item.json.brokerage_postal_code }}, {{ $('Edit Fields').item.json.brokerage_country }}\"\n            }\n          }\n        ]\n      }\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        520,
        -520
      ],
      "id": "66cca6ad-57ac-44b5-87a0-507f55498df4",
      "name": "New Contact",
      "retryOnFail": true,
      "credentials": {
        "notionApi": {
          "id": "3EhNxVoPGBbOY9vC",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/pages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.notionData }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -160,
        -300
      ],
      "id": "1cbfd181-907b-447d-b6dc-fa3e534b1126",
      "name": "New Client",
      "retryOnFail": true,
      "credentials": {
        "notionApi": {
          "id": "3EhNxVoPGBbOY9vC",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08MBR35VBJ",
          "mode": "list",
          "cachedResultName": "tests"
        },
        "text": "=New Onboarding Complete, Client Created: {{ $json.url }}",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "mrkdwn": false,
          "unfurl_links": false,
          "unfurl_media": true,
          "sendAsUser": ""
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        40,
        -300
      ],
      "id": "4332ba55-8ee8-4715-a970-2a3b75ab8c0e",
      "name": "Slack1",
      "webhookId": "09eef158-29e3-4c76-a1a3-bde7ba18b6f3",
      "credentials": {
        "slackApi": {
          "id": "5goi1ZcCB6TvJ8SQ",
          "name": "OAuth User"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "sendTo": "=arslan@salesgenius.co, mauricio.perera@gmail.com",
        "subject": "=Onboarding Completed - {{ $('Edit Fields').item.json.first_name }} {{ $('Edit Fields').item.json.last_name }}",
        "message": "=Client: {{ $('New Client').item.json.url }}\nContact: {{ $('New Contact').item.json.url }}\nOnboarding: {{ $('Create New Onboarding in Notion').item.json.url }}",
        "options": {
          "appendAttribution": false,
          "senderName": "SalesGenius"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        280,
        -320
      ],
      "id": "f45067b1-a4fb-4b7c-923c-826dbbcfae80",
      "name": "Gmail",
      "webhookId": "cc29534c-9242-430c-bf7b-be40549e764d",
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "R2ppJs5mnCWrQakn",
          "name": "Gmail account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.skool.com/groups/salesgenius-pro-membership-9143/webhooks/aefc1b79e45f441ab8a8521c295c0ac5?email={{ $('Edit Fields').first().json.email }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        -320
      ],
      "id": "a034c584-a716-4eea-b0b2-92712badf09c",
      "name": "Add to Skool"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.salesgenius.co/webhook/createRealtor",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Name",
              "value": "={{ $('Edit Fields').item.json.first_name }} {{ $('Edit Fields').item.json.last_name }}"
            },
            {
              "name": "Email",
              "value": "={{ $('Edit Fields').item.json.email }}"
            },
            {
              "name": "Phone",
              "value": "={{ $('Edit Fields').item.json.phone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        620,
        -320
      ],
      "id": "a50acdc1-f4a5-42f4-9ae2-465e4e3f4552",
      "name": "Commence Realtor Enrichment"
    },
    {
      "parameters": {
        "sendTo": "arslan@salesgenius.co, mauricio.perera@gmail.com",
        "subject": "New Registration",
        "message": "={{ $json.emailContent }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -320,
        -100
      ],
      "id": "fa3f4bd2-8892-4859-b680-b28cd1717a61",
      "name": "New Registration",
      "webhookId": "fe2eebcc-d738-40a7-aa1a-3b8e4bdcba48",
      "credentials": {
        "gmailOAuth2": {
          "id": "R2ppJs5mnCWrQakn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Función para sanitizar el HTML\nfunction safeHTML(str) {\n  return String(str || \"\")\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"<\")\n    .replace(/>/g, \">\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\n// Obtener los datos del nodo \"Edit Fields\"\nconst items = $(\"Edit Fields\").all();\nconst results = [];\n\nfor (let item of items) {\n  const data = item.json;\n\n    // Obtener las URLs dinámicas de los nodos correspondientes\n  const clientUrl = $(\"New Client\").item.json.url || \"#\";\n  const contactUrl = $(\"New Contact\").item.json.url || \"#\";\n  const onboardingUrl = $(\"Create New Onboarding in Notion\").item.json.url || \"#\";\n  \n  // Plantilla HTML del correo\n  const emailTemplate = `\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>New Registration</title>\n    <style>\n      body {\n        font-family: Arial, sans-serif;\n        background-color: #f4f4f4;\n        margin: 0;\n        padding: 20px;\n      }\n      .container {\n        max-width: 600px;\n        background: #fff;\n        padding: 20px;\n        border-radius: 8px;\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n        margin: auto;\n      }\n      h2 {\n        background: #007bff;\n        color: white;\n        padding: 10px;\n        border-radius: 5px;\n        text-align: center;\n      }\n      .section {\n        margin-bottom: 20px;\n      }\n      .section-title {\n        font-size: 18px;\n        font-weight: bold;\n        border-bottom: 2px solid #007bff;\n        padding-bottom: 5px;\n        margin-bottom: 10px;\n      }\n      .data-item {\n        margin-bottom: 5px;\n      }\n      .label {\n        font-weight: bold;\n        display: inline-block;\n        width: 150px;\n        color: #333;\n      }\n      .value {\n        display: inline-block;\n        color: #555;\n      }\n      .logo {\n        text-align: center;\n        margin-bottom: 20px;\n      }\n      .logo img {\n        max-width: 150px;\n      }\n      .headshot img {\n        max-width: 100px;\n        border-radius: 50%;\n        display: block;\n        margin: 10px auto;\n      }\n      .button-section {\n        text-align: center;\n        margin-top: 20px;\n      }\n      .button {\n        display: inline-block;\n        margin: 10px;\n        padding: 10px 20px;\n        background-color: #007bff;\n        color: #FFFFFF !important;\n        text-decoration: none;\n        border-radius: 5px;\n        font-weight: bold;\n      }\n      .button:hover {\n        background-color: #0056b3;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <h2>New Registration</h2>\n      <div class=\"logo\">\n        <img src=\"${safeHTML(data.logo)}\" alt=\"Company Logo\">\n      </div>\n      \n      <div class=\"section\">\n        <div class=\"section-title\">Personal Information</div>\n        <div class=\"data-item\"><span class=\"label\">Name:</span> <span class=\"value\">${safeHTML(data.first_name)} ${safeHTML(data.last_name)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Email:</span> <span class=\"value\">${safeHTML(data.email)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Phone:</span> <span class=\"value\">${safeHTML(data.phone)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">DOB:</span> <span class=\"value\">${safeHTML(data.date_of_birth)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Timezone:</span> <span class=\"value\">${safeHTML(data.timezone)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Clothing Size:</span> <span class=\"value\">${safeHTML(data.clothing_size)}</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">Address</div>\n        <div class=\"data-item\"><span class=\"label\">Address:</span> <span class=\"value\">${safeHTML(data.address)}${data.address_unit ? ', Unit ' + safeHTML(data.address_unit) : ''}</span></div>\n        <div class=\"data-item\"><span class=\"label\">City:</span> <span class=\"value\">${safeHTML(data.city)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">State:</span> <span class=\"value\">${safeHTML(data.state)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Postal Code:</span> <span class=\"value\">${safeHTML(data.postal_code)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Country:</span> <span class=\"value\">${safeHTML(data.country)}</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">Brokerage Info</div>\n        <div class=\"data-item\"><span class=\"label\">Name:</span> <span class=\"value\">${safeHTML(data.brokerage_name)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Address:</span> <span class=\"value\">${safeHTML(data.brokerage_address)}${data.brokerage_unit ? ', Unit ' + safeHTML(data.brokerage_unit) : ''}</span></div>\n        <div class=\"data-item\"><span class=\"label\">City:</span> <span class=\"value\">${safeHTML(data.brokerage_city)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">State:</span> <span class=\"value\">${safeHTML(data.brokerage_state)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Postal Code:</span> <span class=\"value\">${safeHTML(data.brokerage_postal_code)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Country:</span> <span class=\"value\">${safeHTML(data.brokerage_country)}</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">Business Details</div>\n        <div class=\"data-item\"><span class=\"label\">Business Type:</span> <span class=\"value\">${safeHTML(data.business_type)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Team Name:</span> <span class=\"value\">${data.team_name ? safeHTML(data.team_name) : 'N/A'}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Team Size:</span> <span class=\"value\">${data.team_size ? safeHTML(data.team_size) : 'N/A'}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Instagram:</span> <span class=\"value\">@${safeHTML(data.instagram_handle)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Facebook:</span> <span class=\"value\">${data.has_facebook_page ? `<a href=\"${safeHTML(data.facebook_page_url)}\">View</a>` : 'No'}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Website:</span> <span class=\"value\">${data.has_website ? `<a href=\"${safeHTML(data.website_url)}\">Visit</a>` : 'No'}</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">CRM Information</div>\n        <div class=\"data-item\"><span class=\"label\">Using CRM:</span> <span class=\"value\">${data.using_crm ? 'Yes' : 'No'}</span></div>\n        <div class=\"data-item\"><span class=\"label\">CRM Name:</span> <span class=\"value\">${data.using_crm ? safeHTML(data.crm_name) : 'N/A'}</span></div>\n        <div class=\"data-item\"><span class=\"label\">CRM Connected to Meta:</span> <span class=\"value\">${data.crm_connected_to_meta ? 'Yes' : 'No'}</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">Financial Information</div>\n        <div class=\"data-item\"><span class=\"label\">Current GCI:</span> <span class=\"value\">$${safeHTML(data.current_year_gci)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Average Deal Size:</span> <span class=\"value\">$${safeHTML(data.current_year_average_price)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Commission %:</span> <span class=\"value\">${safeHTML(data.current_year_commission_percentage)}%</span></div>\n        <div class=\"data-item\"><span class=\"label\">Listings:</span> <span class=\"value\">${safeHTML(data.current_year_listings)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Buyer Deals:</span> <span class=\"value\">${safeHTML(data.current_year_buyer_deals)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Lease Deals:</span> <span class=\"value\">${safeHTML(data.current_year_lease_deals)}</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">Next Year Goals</div>\n        <div class=\"data-item\"><span class=\"label\">GCI Goal:</span> <span class=\"value\">$${safeHTML(data.next_year_gci_goal)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Target Deal Size:</span> <span class=\"value\">$${safeHTML(data.next_year_target_deal_size)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Target Commission %:</span> <span class=\"value\">${safeHTML(data.next_year_target_commission_percentage)}%</span></div>\n      </div>\n\n      <div class=\"section\">\n        <div class=\"section-title\">Additional Information</div>\n        <div class=\"data-item\"><span class=\"label\">Primary Color:</span> <span class=\"value\">${safeHTML(data.primary_color)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Submission Date:</span> <span class=\"value\">${safeHTML(data.submission_date)}</span></div>\n        <div class=\"data-item\"><span class=\"label\">Source:</span> <span class=\"value\">${safeHTML(data.source)}</span></div>\n      </div>\n\n      <div class=\"section headshot\">\n        <div class=\"section-title\">Profile Picture</div>\n        <img src=\"${safeHTML(data.headshot)}\" alt=\"Profile Picture\">\n      </div>\n\n       <!-- Nueva sección para los botones -->\n      <div class=\"button-section\">\n        <a href=\"${safeHTML(clientUrl)}\" class=\"button\">Client</a>\n        <a href=\"${safeHTML(contactUrl)}\" class=\"button\">Contact</a>\n        <a href=\"${safeHTML(onboardingUrl)}\" class=\"button\">Onboarding</a>\n      </div>\n\n    </div>\n  </body>\n  </html>`;\n\n  // Agregar el resultado formateado a la salida\n  results.push({\n    json: {\n      emailContent: emailTemplate\n    }\n  });\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        -320
      ],
      "id": "b340ae37-0a9f-4283-8239-1efdbe83a915",
      "name": "New Registration template"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08MBR35VBJ",
          "mode": "list",
          "cachedResultName": "tests"
        },
        "messageType": "block",
        "blocksUi": "={{ $json.slackMessage }}",
        "otherOptions": {
          "includeLinkToWorkflow": false,
          "mrkdwn": false,
          "unfurl_links": false,
          "unfurl_media": true,
          "sendAsUser": ""
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        80,
        -100
      ],
      "id": "e345ffff-3bf6-4e18-965f-a138a1f500bf",
      "name": "Slack",
      "webhookId": "09eef158-29e3-4c76-a1a3-bde7ba18b6f3",
      "credentials": {
        "slackApi": {
          "id": "5goi1ZcCB6TvJ8SQ",
          "name": "OAuth User"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "sendTo": "=arslan@salesgenius.co, mauricio.perera@gmail.com",
        "subject": "=Onboarding Completed - {{ $('Edit Fields').item.json.first_name }} {{ $('Edit Fields').item.json.last_name }}",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Onboarding Completed</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #ffffff;\n            color: #000000;\n            padding: 20px;\n        }\n        .container {\n            max-width: 600px;\n            margin: auto;\n            padding: 20px;\n            border: 1px solid #000;\n            background-color: #000000;\n            color: #ffffff;\n        }\n        .logo {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        .content {\n            text-align: left;\n            font-size: 16px;\n        }\n        .footer {\n            margin-top: 20px;\n            text-align: center;\n            font-size: 12px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"logo\">\n            <img src=\"https://images.leadconnectorhq.com/image/f_webp/q_80/r_1200/u_https://assets.cdn.filesafe.space/zpjvSoJ3TMkdq8pcj7VJ/media/6499bf999db2c32f4ad9391e.png\" alt=\"Sales Genius Logo\" width=\"150\" style=\"background-color: #000; padding: 10px;\">\n        </div>\n        <div class=\"content\">\n            <h2>Your onboarding process has been successfully completed!</h2>\n            <p>Dear {{ $('Edit Fields').item.json.first_name }} {{ $('Edit Fields').item.json.last_name }},</p>\n            <p>We are pleased to inform you that we have received and processed your onboarding form. Our team is already working to take your experience to the next level.</p>\n            <p>If you have any questions or need further information, please do not hesitate to reach out to us.</p>\n            <p>Thank you for trusting Sales Genius!</p>\n            <p>Best regards,<br>The Sales Genius Team</p>\n        </div>\n        <div class=\"footer\">\n            <p>&copy; {{$now.format('yyyy')}} Sales Genius. All rights reserved.</p>\n        </div>\n    </div>\n</body>\n</html>\n",
        "options": {
          "appendAttribution": false,
          "senderName": "SalesGenius"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        360,
        -120
      ],
      "id": "e969791f-246a-4a89-a4be-7195e728d9a6",
      "name": "Gmail1",
      "webhookId": "cc29534c-9242-430c-bf7b-be40549e764d",
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "R2ppJs5mnCWrQakn",
          "name": "Gmail account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c1d1b14d-b1a0-422a-9e12-abbb8a4e5428",
              "name": "leadsie",
              "value": "=https://app.leadsie.com/connect/salesgenius/manage?customUserId={{ $('Edit Fields').item.json.first_name }}_{{ $('Edit Fields').item.json.last_name }}-{{ $('Create New Onboarding in Notion').item.json.id }}",
              "type": "string"
            },
            {
              "id": "372cf1c6-2e3a-4dce-ab3b-069fc5d42fe6",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        700,
        -520
      ],
      "id": "2540e7bb-1cf5-4ac2-968f-15b4b9323668",
      "name": "Set Leadsie"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.notion.com/v1/pages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"parent\": {\n    \"database_id\": \"1cb1d08c4f5a80feb64ccef98d2359b4\"\n  },\n  \"properties\": {\n      \"Client\": {\n        \"relation\": [\n          {\n            \"id\": \"{{ $('New Client').item.json.id }}\"\n          }\n        ]\n      }\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        820,
        -120
      ],
      "id": "2a7e186f-0b30-4d5b-bcf7-7607d90d54b9",
      "name": "New Leadsie Credentials",
      "retryOnFail": true,
      "credentials": {
        "notionApi": {
          "id": "3EhNxVoPGBbOY9vC",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "=arslan@salesgenius.co, mauricio.perera@gmail.com",
        "subject": "Complete Your Setup - Action Required to Connect with Sales Genius",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Leadsie Step - Action Required</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #ffffff;\n            color: #000000;\n            padding: 20px;\n        }\n        .container {\n            max-width: 600px;\n            margin: auto;\n            padding: 20px;\n            border: 1px solid #000;\n            background-color: #000000;\n            color: #ffffff;\n        }\n        .logo {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n        .content {\n            text-align: left;\n            font-size: 16px;\n        }\n        .button {\n            background-color: #188bf6;\n            color: #FFFFFF !important;\n            padding: 15px 32px;\n            text-align: center;\n            text-decoration: none;\n            display: inline-block;\n            font-size: 16px;\n            margin: 10px 0;\n            border-radius: 4px;\n        }\n        .footer {\n            margin-top: 20px;\n            text-align: center;\n            font-size: 12px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"logo\">\n            <img src=\"https://images.leadconnectorhq.com/image/f_webp/q_80/r_1200/u_https://assets.cdn.filesafe.space/zpjvSoJ3TMkdq8pcj7VJ/media/6499bf999db2c32f4ad9391e.png\" alt=\"Sales Genius Logo\" width=\"150\" style=\"background-color: #000; padding: 10px;\">\n        </div>\n        <div class=\"content\">\n            <h2>Action Required - Complete Your Setup</h2>\n            <p>Dear {{ $('Edit Fields').item.json.first_name }} {{ $('Edit Fields').item.json.last_name }},</p>\n            <p>We are excited to have you onboard! To proceed with the setup, please click the button below to connect your account with Sales Genius via Leadsie.</p>\n            <a href=\"https://app.leadsie.com/connect/salesgenius/manage?customUserId={{ $('Edit Fields').item.json.first_name }}_{{ $('Edit Fields').item.json.last_name }}-{{ $('Create New Onboarding in Notion').item.json.id }}\" class=\"button\">Connect Now</a>\n            <p>If you have any questions or need assistance, feel free to contact us.</p>\n            <p>Thank you for trusting Sales Genius!</p>\n            <p>Best regards,<br>The Sales Genius Team</p>\n        </div>\n        <div class=\"footer\">\n            <p>&copy; {{$now.format('yyyy')}} Sales Genius. All rights reserved.</p>\n        </div>\n    </div>\n</body>\n</html>\n",
        "options": {
          "appendAttribution": false,
          "senderName": "SalesGenius"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        580,
        -120
      ],
      "id": "8faca6e8-5881-4146-98ab-adf4797600ef",
      "name": "Notify Leadsie link",
      "webhookId": "cc29534c-9242-430c-bf7b-be40549e764d",
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "R2ppJs5mnCWrQakn",
          "name": "Gmail account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Función auxiliar para validar valores no vacíos\nfunction isValid(value) {\n  return value !== null && value !== undefined && value !== \"\" && value !== \"null\";\n}\n\n// Obtener todos los ítems de entrada del nodo anterior (Edit Fields)\nconst items = $('Edit Fields').all();\n\n// Array para almacenar los resultados\nconst results = [];\n\nfor (const item of items) {\n  // Obtener los datos del JSON de cada ítem\n  const inputData = item.json;\nconst leadsieData = $('Set Leadsie').first().json;\n  // Construir el objeto properties dinámicamente para este ítem\n  const properties = {};\n\n  // Agregar \"Client\" usando first_name y last_name\n  if (isValid(inputData.first_name) || isValid(inputData.last_name)) {\n    properties.Client = {\n      title: [\n        {\n          text: {\n            content: `${inputData.first_name || \"\"} ${inputData.last_name || \"\"}`.trim(),\n          },\n        },\n      ],\n    };\n  }\n\n  // \"Contacts\" como relation usando $input.first().json.id\n  if (isValid(inputData.instagram_handle)) {\n    properties.Contacts = {\n      relation: [\n        {\n          id: $input.first().json.id, // Usar el ID del primer ítem de entrada\n        },\n      ],\n    };\n  }\n\n  if (isValid(inputData.business_type)) {\n    properties.Plan = {\n      select: {\n        name: inputData.business_type,\n      },\n    };\n  }\n\n  if (isValid(inputData.facebook_page_url)) {\n    properties[\"Ad Account\"] = {\n      url: inputData.facebook_page_url,\n    };\n    properties[\"Facebook Business Page\"] = {\n      url: inputData.facebook_page_url,\n    };\n  }\n\n  if (isValid(inputData.instagram_handle)) {\n    properties.Instagram = {\n      url: inputData.instagram_handle,\n    };\n  }\n\n  if (isValid(inputData.website_url)) {\n    properties.Website = {\n      url: inputData.website_url,\n    };\n    properties[\"Calender Link\"] = {\n      url: inputData.website_url,\n    };\n  }\n\n  if (isValid(inputData.next_year_gci_goal)) {\n    properties[\"Next Deliverable\"] = {\n      rich_text: [\n        {\n          text: {\n            content: inputData.next_year_gci_goal.toString(),\n          },\n        },\n      ],\n    };\n  }\n\n  if (isValid(inputData.current_year_listings)) {\n    properties[\"Term Length\"] = {\n      number: parseFloat(inputData.current_year_listings),\n    };\n  }\n\n  if (isValid(inputData.current_year_buyer_deals)) {\n    properties.Completion = {\n      number: parseFloat(inputData.current_year_buyer_deals),\n    };\n  }\n\n  if (isValid(inputData.email)) {\n    properties.Email = {\n      email: inputData.email,\n    };\n  }\n\n  if (isValid(inputData.phone)) {\n    properties.Phone = {\n      phone_number: inputData.phone,\n    };\n  }\n\n  if (isValid(inputData.headshot_bg)) {\n  properties.HeadshotBG = {\n    url: inputData.headshot_bg,\n  };\n}\n\nif (isValid(inputData.logo_bg)) {\n  properties.LogoBG = {\n    url: inputData.logo_bg,\n  };\n}\n\nif (isValid(inputData.notion_image)) {\n  properties.NotionImage = {\n    url: inputData.notion_image,\n  };\n}\n\nif (isValid(inputData.notion_banner)) {\n  properties.NotionBanner = {\n    url: inputData.notion_banner,\n  };\n}\n\nif (isValid(leadsieData.leadsie)) {\n  properties.Leadsie = {\n    url: leadsieData.leadsie,\n  };\n}\n  \n  if (isValid(inputData.crm_name)) {\n    properties[\"Ad Account ID\"] = {\n      rich_text: [\n        {\n          text: {\n            content: inputData.crm_name,\n          },\n        },\n      ],\n    };\n  }\n\n  if (isValid(inputData.primary_color)) {\n    properties[\"Reports Dashboard PW\"] = {\n      rich_text: [\n        {\n          text: {\n            content: inputData.primary_color,\n          },\n        },\n      ],\n    };\n  }\n\n  // Agregar el objeto completo (parent + properties) envuelto en notionData al array de resultados\n  results.push({\n    notionData: {\n      parent: { database_id: \"1491d08c4f5a80888995c96c2350b25d\" },\n      properties: properties,\n    },\n  });\n}\n\n// Devolver el array con todos los objetos completos\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -320,
        -300
      ],
      "id": "cd687c9d-2cfc-4d08-9ec1-e961fc13cd0f",
      "name": "New Client set data"
    },
    {
      "parameters": {
        "jsCode": "// Función para sanitizar el texto (similar a safeHTML pero para Slack)\nfunction safeSlackText(str) {\n  return String(str || \"\")\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"<\")\n    .replace(/>/g, \">\");\n}\n\n// Obtener los datos del nodo \"Edit Fields\"\nconst items = $(\"Edit Fields\").all();\nconst results = [];\n\nfor (let item of items) {\n  const data = item.json;\n\n  // Obtener las URLs dinámicas de los nodos correspondientes\n  const clientUrl = $(\"New Client\").item.json.url || \"#\";\n  const contactUrl = $(\"New Contact\").item.json.url || \"#\";\n  const onboardingUrl = $(\"Create New Onboarding in Notion\").item.json.url || \"#\";\n\n  // Construir el mensaje de Slack usando Block Kit\n  const slackMessage = {\n    blocks: [\n      {\n        type: \"header\",\n        text: {\n          type: \"plain_text\",\n          text: \"New Registration\",\n          emoji: true,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:bust_in_silhouette: Personal Information:*\\n• *Name:* ${safeSlackText(data.first_name)} ${safeSlackText(data.last_name)}\\n• *Email:* <mailto:${safeSlackText(data.email)}|${safeSlackText(data.email)}>\\n• *Phone:* ${safeSlackText(data.phone)}\\n• *Timezone:* ${safeSlackText(data.timezone)}\\n• *Clothing Size:* ${safeSlackText(data.clothing_size)}\\n• *Address:* ${safeSlackText(data.address)}${data.address_unit ? `, Unit ${safeSlackText(data.address_unit)}` : \"\"} ${safeSlackText(data.city)} ${safeSlackText(data.state)} ${safeSlackText(data.postal_code)} ${safeSlackText(data.country)}`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:office: Brokerage + Business Info:*\\n• *Name:* ${safeSlackText(data.brokerage_name)}\\n• *Address:* ${safeSlackText(data.brokerage_address)}${data.brokerage_unit ? `, Unit ${safeSlackText(data.brokerage_unit)}` : \"\"} ${safeSlackText(data.brokerage_city)} ${safeSlackText(data.brokerage_state)} ${safeSlackText(data.brokerage_postal_code)} ${safeSlackText(data.brokerage_country)}\\n• *Business Type:* ${safeSlackText(data.business_type)}\\n• *Team Name:* ${data.team_name ? safeSlackText(data.team_name) : \"N/A\"}\\n• *Team Size:* ${data.team_size ? safeSlackText(data.team_size) : \"N/A\"}`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:computer: Socials:\\n• *Instagram:* <https://www.instagram.com/${safeSlackText(data.instagram_handle)}|@${safeSlackText(data.instagram_handle)}>\\n• *Facebook:* ${data.has_facebook_page ? `<${safeSlackText(data.facebook_page_url)}|View>` : \"No\"}\\n• *Website:* ${data.has_website ? `<${safeSlackText(data.website_url)}|Visit>` : \"No\"}`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:computer: CRM Information:*\\n• *Using CRM:* ${data.using_crm ? \"Yes\" : \"No\"}\\n• *CRM Name:* ${data.using_crm ? safeSlackText(data.crm_name) : \"N/A\"}\\n• *CRM Connected to Meta:* ${data.crm_connected_to_meta ? \"Yes\" : \"No\"}`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:moneybag: Financial Information:*\\n• *Current GCI:* $${safeSlackText(data.current_year_gci)}\\n• *Average Deal Size:* $${safeSlackText(data.current_year_average_price)}\\n• *Commission %:* ${safeSlackText(data.current_year_commission_percentage)}%\\n• *Listings:* ${safeSlackText(data.current_year_listings)}\\n• *Buyer Deals:* ${safeSlackText(data.current_year_buyer_deals)}\\n• *Lease Deals:* ${safeSlackText(data.current_year_lease_deals)}`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:dart: Next Year Goals:*\\n• *GCI Goal:* $${safeSlackText(data.next_year_gci_goal)}\\n• *Target Deal Size:* $${safeSlackText(data.next_year_target_deal_size)}\\n• *Target Commission %:* ${safeSlackText(data.next_year_target_commission_percentage)}%`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:clipboard: Additional Information:*\\n• *Primary Color:* ${safeSlackText(data.primary_color)}\\n• *Submission Date:* ${safeSlackText(data.submission_date)}\\n• *Source:* ${safeSlackText(data.source)}`,\n        },\n      },\n      {\n        type: \"section\",\n        text: {\n          type: \"mrkdwn\",\n          text: `*:frame_with_picture: Profile Picture:*\\n${data.headshot ? `<${safeSlackText(data.headshot)}|View Picture>` : \"No profile picture available\"}`,\n        },\n      },\n      {\n  type: \"section\",\n  text: {\n    type: \"mrkdwn\",\n    text: `*:link: Quick Links:*\\n• *Client Notion Page:* <${safeSlackText(clientUrl)}|View>\\n• *Contact Notion Page:* <${safeSlackText(contactUrl)}|View>\\n• *Onboarding Notion Page:* <${safeSlackText(onboardingUrl)}|View>`,\n  },\n},\n    ],\n  };\n\n  // Agregar el resultado formateado a la salida\n  results.push({\n    json: {\n      slackMessage: slackMessage,\n    },\n  });\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -120,
        -100
      ],
      "id": "13bbab49-ea71-42c8-9798-2e957f65d9d6",
      "name": "Set Slack Notification data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a0a3e23-aff9-49ba-981b-bd9c202d81c9",
              "name": "Headshot",
              "value": "={{ $('Edit Fields').item.json.headshot }}",
              "type": "string"
            },
            {
              "id": "62fddea6-4311-4226-b543-e19905bf9559",
              "name": "Logo",
              "value": "={{ $('Edit Fields').item.json.logo }}",
              "type": "string"
            },
            {
              "id": "e1ac7d7a-a826-4bc1-afd3-c3d43a2161f1",
              "name": "Client ID",
              "value": "={{ $('New Client').item.json.id }}",
              "type": "string"
            },
            {
              "id": "f35b8bf2-d3a2-41a7-a36e-71b3e21232ee",
              "name": "First Name",
              "value": "={{ $('Edit Fields').item.json.first_name }}",
              "type": "string"
            },
            {
              "id": "66acb3c0-07bd-4062-862a-1fb9703c8cd9",
              "name": "Last Name",
              "value": "={{ $('Edit Fields').item.json.last_name }}",
              "type": "string"
            },
            {
              "id": "100795ab-6f45-42a7-897c-78ad1c29c294",
              "name": "Email",
              "value": "={{ $('Edit Fields').item.json.email }}",
              "type": "string"
            },
            {
              "id": "82943a95-4acd-4dd1-8436-44d033fef68e",
              "name": "Phone",
              "value": "={{ $('Edit Fields').item.json.phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        -120
      ],
      "id": "a6916054-7bc7-410d-8995-b1c5132eac13",
      "name": "Get Image data"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "JMc3xPZAwmu8HiUx",
          "mode": "list",
          "cachedResultName": "Client Image Enhancement"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1220,
        -120
      ],
      "id": "fece0eca-64db-47fa-801d-91fa2965a015",
      "name": "Client Image Enhancement"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.notion.com/v1/pages/{{ $('Get Image data').item.json[\"Client ID\"] }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "notionApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"properties\": {\n      \"HeadshotBG\": { \"url\": \"{{ $json.headshot_bg }}\" },\n      \"LogoBG\": { \"url\": \"{{ $json.logo_bg }}\" },\n      \"NotionImage\": { \"url\": \"{{ $json.notion_image }}\" },\n      \"NotionBanner\": { \"url\": \"{{ $json.notion_banner }}\" }\n    }\n  }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1440,
        -120
      ],
      "id": "a07afcd4-0ecb-41ea-bbfa-e8ce2661f113",
      "name": "Update Client Images_bg",
      "retryOnFail": true,
      "credentials": {
        "notionApi": {
          "id": "3EhNxVoPGBbOY9vC",
          "name": "Notion account"
        }
      }
    }
  ],
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-04-01T18:37:42.950Z",
      "updatedAt": "2025-04-01T18:37:42.950Z",
      "role": "workflow:owner",
      "workflowId": "9wSjOcu8bxQ5bGJ3",
      "projectId": "JPifOz0qwqZ4t1q3",
      "project": {
        "createdAt": "2025-01-22T02:43:20.320Z",
        "updatedAt": "2025-01-22T02:44:04.001Z",
        "id": "JPifOz0qwqZ4t1q3",
        "name": "Emma Pace <emma@salesgenius.co>",
        "type": "personal",
        "icon": null,
        "projectRelations": [
          {
            "createdAt": "2025-01-22T02:43:20.320Z",
            "updatedAt": "2025-01-22T02:43:20.320Z",
            "role": "project:personalOwner",
            "userId": "f8bb0fb6-1857-45fa-9ac1-27b6e6497323",
            "projectId": "JPifOz0qwqZ4t1q3",
            "user": {
              "createdAt": "2025-01-22T02:43:19.556Z",
              "updatedAt": "2025-02-14T18:38:15.546Z",
              "id": "f8bb0fb6-1857-45fa-9ac1-27b6e6497323",
              "email": "emma@salesgenius.co",
              "firstName": "Emma",
              "lastName": "Pace",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-01-22T02:45:22.428Z",
                "personalization_survey_n8n_version": "1.74.3",
                "companySize": "<20",
                "companyType": "digital-agency",
                "role": "business-owner",
                "reportedSource": "youtube"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "TotyBJ1rIIIGlYrK",
                "userActivatedAt": 1737997390312,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1739558292687
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": true
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-04-08T13:32:57.000Z",
  "versionId": "9e817fe7-166d-4557-8a21-37df2b951868"
}